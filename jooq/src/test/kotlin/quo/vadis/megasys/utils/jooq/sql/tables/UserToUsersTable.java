/*
 * This file is generated by jOOQ.
 */
package quo.vadis.megasys.utils.jooq.sql.tables;


import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.JSONB;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import quo.vadis.megasys.utils.jooq.sql.DefaultSchema;
import quo.vadis.megasys.utils.jooq.sql.tables.records.UserToUsersRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserToUsersTable extends TableImpl<UserToUsersRecord> {

    private static final long serialVersionUID = -1026290439;

    /**
     * The reference instance of <code>user_to_users</code>
     */
    public static final UserToUsersTable USER_TO_USERS = new UserToUsersTable();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserToUsersRecord> getRecordType() {
        return UserToUsersRecord.class;
    }

    /**
     * The column <code>user_to_users.user_id</code>.
     */
    public final TableField<UserToUsersRecord, Long> USER_ID = createField(DSL.name("user_id"), org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>user_to_users.user_name</code>.
     */
    public final TableField<UserToUsersRecord, String> USER_NAME = createField(DSL.name("user_name"), org.jooq.impl.SQLDataType.VARCHAR(32), this, "");

    /**
     * The column <code>user_to_users.user_payload</code>.
     */
    public final TableField<UserToUsersRecord, JSONB> USER_PAYLOAD = createField(DSL.name("user_payload"), org.jooq.impl.SQLDataType.JSONB, this, "");

    /**
     * The column <code>user_to_users.group_id</code>.
     */
    public final TableField<UserToUsersRecord, Long> GROUP_ID = createField(DSL.name("group_id"), org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>user_to_users.group_name</code>.
     */
    public final TableField<UserToUsersRecord, String> GROUP_NAME = createField(DSL.name("group_name"), org.jooq.impl.SQLDataType.VARCHAR(32), this, "");

    /**
     * The column <code>user_to_users.group_payload</code>.
     */
    public final TableField<UserToUsersRecord, JSONB> GROUP_PAYLOAD = createField(DSL.name("group_payload"), org.jooq.impl.SQLDataType.JSONB, this, "");

    /**
     * Create a <code>user_to_users</code> table reference
     */
    public UserToUsersTable() {
        this(DSL.name("user_to_users"), null);
    }

    /**
     * Create an aliased <code>user_to_users</code> table reference
     */
    public UserToUsersTable(String alias) {
        this(DSL.name(alias), USER_TO_USERS);
    }

    /**
     * Create an aliased <code>user_to_users</code> table reference
     */
    public UserToUsersTable(Name alias) {
        this(alias, USER_TO_USERS);
    }

    private UserToUsersTable(Name alias, Table<UserToUsersRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserToUsersTable(Name alias, Table<UserToUsersRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> UserToUsersTable(Table<O> child, ForeignKey<O, UserToUsersRecord> key) {
        super(child, key, USER_TO_USERS);
    }

    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    @Override
    public UserToUsersTable as(String alias) {
        return new UserToUsersTable(DSL.name(alias), this);
    }

    @Override
    public UserToUsersTable as(Name alias) {
        return new UserToUsersTable(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserToUsersTable rename(String name) {
        return new UserToUsersTable(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UserToUsersTable rename(Name name) {
        return new UserToUsersTable(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, String, JSONB, Long, String, JSONB> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
