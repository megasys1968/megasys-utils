/*
 * This file is generated by jOOQ.
 */
package quo.vadis.megasys.utils.jooq.sql.tables;


import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import quo.vadis.megasys.utils.jooq.sql.DefaultSchema;
import quo.vadis.megasys.utils.jooq.sql.Indexes;
import quo.vadis.megasys.utils.jooq.sql.Keys;
import quo.vadis.megasys.utils.jooq.sql.tables.records.TestUserGroupRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TestUserGroupTable extends TableImpl<TestUserGroupRecord> {

    private static final long serialVersionUID = -1740003018;

    /**
     * The reference instance of <code>test_user_group</code>
     */
    public static final TestUserGroupTable TEST_USER_GROUP = new TestUserGroupTable();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TestUserGroupRecord> getRecordType() {
        return TestUserGroupRecord.class;
    }

    /**
     * The column <code>test_user_group.user_id</code>.
     */
    public final TableField<TestUserGroupRecord, Long> USER_ID = createField(DSL.name("user_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>test_user_group.group_id</code>.
     */
    public final TableField<TestUserGroupRecord, Long> GROUP_ID = createField(DSL.name("group_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>test_user_group.memo</code>.
     */
    public final TableField<TestUserGroupRecord, String> MEMO = createField(DSL.name("memo"), org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>test_user_group</code> table reference
     */
    public TestUserGroupTable() {
        this(DSL.name("test_user_group"), null);
    }

    /**
     * Create an aliased <code>test_user_group</code> table reference
     */
    public TestUserGroupTable(String alias) {
        this(DSL.name(alias), TEST_USER_GROUP);
    }

    /**
     * Create an aliased <code>test_user_group</code> table reference
     */
    public TestUserGroupTable(Name alias) {
        this(alias, TEST_USER_GROUP);
    }

    private TestUserGroupTable(Name alias, Table<TestUserGroupRecord> aliased) {
        this(alias, aliased, null);
    }

    private TestUserGroupTable(Name alias, Table<TestUserGroupRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TestUserGroupTable(Table<O> child, ForeignKey<O, TestUserGroupRecord> key) {
        super(child, key, TEST_USER_GROUP);
    }

    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.TEST_USER_GROUP_PKEY);
    }

    @Override
    public UniqueKey<TestUserGroupRecord> getPrimaryKey() {
        return Keys.TEST_USER_GROUP_PKEY;
    }

    @Override
    public List<UniqueKey<TestUserGroupRecord>> getKeys() {
        return Arrays.<UniqueKey<TestUserGroupRecord>>asList(Keys.TEST_USER_GROUP_PKEY);
    }

    @Override
    public List<ForeignKey<TestUserGroupRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TestUserGroupRecord, ?>>asList(Keys.TEST_USER_GROUP__TEST_USER_GROUP_USER_ID_FKEY, Keys.TEST_USER_GROUP__TEST_USER_GROUP_GROUP_ID_FKEY);
    }

    public TestUserTable testUser() {
        return new TestUserTable(this, Keys.TEST_USER_GROUP__TEST_USER_GROUP_USER_ID_FKEY);
    }

    public TestGroupTable testGroup() {
        return new TestGroupTable(this, Keys.TEST_USER_GROUP__TEST_USER_GROUP_GROUP_ID_FKEY);
    }

    @Override
    public TestUserGroupTable as(String alias) {
        return new TestUserGroupTable(DSL.name(alias), this);
    }

    @Override
    public TestUserGroupTable as(Name alias) {
        return new TestUserGroupTable(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TestUserGroupTable rename(String name) {
        return new TestUserGroupTable(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TestUserGroupTable rename(Name name) {
        return new TestUserGroupTable(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, Long, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
